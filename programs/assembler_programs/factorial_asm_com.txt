push 0
pop bx  
jump feed_END:
feed:
push [bx + 0]              ; seed
push 0
ja IF_LABEL_0:
push 1
pop ax; save return value to ax
ret

IF_LABEL_0:

push [bx + 0]              ; seed
push 1
jne IF_LABEL_2:
push 1
pop ax; save return value to ax
ret

IF_LABEL_2:

push [bx + 0]              ; seed
push bx; save a copy
push [bx + 0]              ; seed
push 1
sub
push bx + 1
pop  bx 
pop [bx + 0]
dump
call feed:
pop bx; push copy back
push ax; returned value
mul
pop ax; save return value to ax
ret

feed_END:

push bx; save a copy
push 8
pop [bx + 0]
dump
call feed:
pop bx; push copy back
push ax; returned value
out
;print feed(........) 

hlt
