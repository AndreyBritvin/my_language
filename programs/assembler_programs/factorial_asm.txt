push 0
pop bx  
push bx
push 0
push bx + 1
pop  bx 
pop [bx + 0]
call feed:
pop bx
push ax
out

jump feed_END:
feed:
push [bx + 0] ; 
push 0
ja IF_LABEL_0:
push 1
pop ax
ret

IF_LABEL_0:

push [bx + 0] ; 
push 1
jne IF_LABEL_1:
push 1
pop ax
ret

IF_LABEL_1:

push [bx + 0] ; 
push bx
push [bx + 0] ; 
push 1
sub
push bx + 1
pop  bx 
pop [bx + 0]
call feed:
pop bx
push ax
mul
pop ax
ret

feed_END:

hlt
